
@inproceedings{kuhejda_pull_2023,
	title = {Pull {Requests} {Acceptance}: {A} {Study} {Across} {Programming} {Languages}},
	shorttitle = {Pull {Requests} {Acceptance}},
	url = {https://ieeexplore.ieee.org/document/10371500},
	doi = {10.1109/SEAA60479.2023.00064},
	abstract = {Context: The pull-based development is a modern way to support distributed software development, helping to produce high-quality software with increased involvement from the software development community. Objectives: We investigate the effect of source code quality on Pull Request (PR) acceptance in different programming languages, looking at the quality flaws that can be more relevant. Method: We mine software repositories to analyze over 40K PRs from 100 open-source projects in five different programming languages: Python, Java, Kotlin, Haskell, and C/C++. The code quality of the individual PRs was evaluated using static code analysis. Quality flaws were inputted into classification models to predict PRs acceptance and evaluate the fitting. Results: There is a low impact of code quality on PRs acceptance. No major quality flaws can be used to predict reliably PRs acceptance. Conclusion: Source code quality plays a marginal role in accepting PRs in the analyzed projects. Additional factors might impact the acceptance of PRs, such as the reputation and popularity of the submitters.},
	urldate = {2025-03-06},
	booktitle = {2023 49th {Euromicro} {Conference} on {Software} {Engineering} and {Advanced} {Applications} ({SEAA})},
	author = {Kuhejda, Ond≈ôej and Rossi, Bruno},
	month = sep,
	year = {2023},
	note = {ISSN: 2376-9521},
	keywords = {Codes, Fitting, Java, Mining Software Repositories, Predictive models, Pull Requests, Reliability, Software, Source Code Quality, Source coding, Static Code Analysis},
	pages = {378--385},
}

@inproceedings{kudrjavets_small_2022,
	title = {Do {Small} {Code} {Changes} {Merge} {Faster}? {A} {Multi}-{Language} {Empirical} {Investigation}},
	shorttitle = {Do {Small} {Code} {Changes} {Merge} {Faster}?},
	url = {http://arxiv.org/abs/2203.05045},
	doi = {10.1145/3524842.3528448},
	abstract = {Code velocity, or the speed with which code changes are integrated into a production environment, plays a crucial role in Continuous Integration and Continuous Deployment. Many studies report factors influencing code velocity. However, solutions to increase code velocity are unclear. Meanwhile, the industry continues to issue guidelines on "ideal" code change size, believing it increases code velocity despite lacking evidence validating the practice. Surprisingly, this fundamental question has not been studied to date. This study investigates the practicality of improving code velocity by optimizing pull request size and composition (ratio of insertions, deletions, and modifications). We start with a hypothesis that a moderate correlation exists between pull request size and time-to-merge. We selected 100 most popular, actively developed projects from 10 programming languages on GitHub. We analyzed our dataset of 845,316 pull requests by size, composition, and context to explore its relationship to time-to-merge - a proxy to measure code velocity. Our study shows that pull request size and composition do not relate to time-to-merge. Regardless of the contextual factors that can influence pull request size or composition (e.g., programming language), the observation holds. Pull request data from two other platforms: Gerrit and Phabricator (401,790 code reviews) confirms the lack of relationship. This negative result as in "... eliminate useless hypotheses ..." challenges a widespread belief by showing that small code changes do not merge faster to increase code velocity.},
	urldate = {2025-03-06},
	booktitle = {Proceedings of the 19th {International} {Conference} on {Mining} {Software} {Repositories}},
	author = {Kudrjavets, Gunnar and Nagappan, Nachiappan and Rastogi, Ayushi},
	month = may,
	year = {2022},
	note = {arXiv:2203.05045 [cs]},
	keywords = {Computer Science - Software Engineering},
	pages = {537--548},
}

@misc{noauthor_zotero_nodate,
	title = {Zotero {\textbar} {Your} personal research assistant},
	url = {https://www.zotero.org/},
	urldate = {2025-03-06},
}
